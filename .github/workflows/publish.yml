name: Build and Publish ECR Image
on:
  push:
    branches:
      - main
      - deployment/publish_image

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Create .env file
        run: |
          cat > .env << EOF
          # Environment variables for the application
          DATABASE_URI=${{ secrets.DATABASE_URI }}
          PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}
          EOF
          echo "Created .env file for Docker build"

      - name: Get commit hash & timestamp
        run: |
          echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "TIMESTAMP=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push with cache
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REPO_NAME }}:${{ env.COMMIT_HASH }}-${{ env.TIMESTAMP }}
            ${{ steps.login-ecr.outputs.registry }}/${{ secrets.REPO_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secret-files: |
            envfile=.env
